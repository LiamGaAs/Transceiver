--- N_DEV_ADMSvbic.h	2014-12-05 09:20:43.535112577 -0700
+++ N_DEV_ADMSvbic.h	2014-12-04 14:30:01.272251207 -0700
@@ -73,6 +73,7 @@
   static const char *deviceTypeName() {return "q level 10";}
 
   static int numNodes() {return 4;}
+  static int numOptionalNodes() {return 5;}
   static bool modelRequired() {return true;}
   static bool isLinearDevice() {return false;}
 
@@ -377,6 +379,10 @@
   // vt at $temperature;
   double adms_vt_nom;
 
+  // This is used to flag whether the cx, bx, and ei nodes are exposed
+  // on the instance line as external nodes.
+  bool externalNodeMode;
+
 
   // This one is for the annoying bogus "XyceADMSInstTemp" parameter
   // that we need so we can set it from the device manager when there's no
--- N_DEV_ADMSvbic.C	2014-12-05 09:20:41.143165294 -0700
+++ N_DEV_ADMSvbic.C	2014-12-05 09:18:46.173699245 -0700
@@ -623,7 +623,8 @@
     A_dt_Equ_b_NodeOffset(-1),
     A_dt_Equ_ci_NodeOffset(-1),
     A_dt_Equ_c_NodeOffset(-1),
-    admsTemperature(getDeviceOptions().temp.getImmutableValue<double>())
+                                                           admsTemperature(getDeviceOptions().temp.getImmutableValue<double>()),
+                                                           externalNodeMode(false)
 
 {
   numIntVars = 6 + 0;
@@ -633,6 +634,23 @@
   // Right now, we only have state for limited probes...
   numStateVars = 7;
 
+  // Manually inserted code:
+  devConMap.resize(4);
+  devConMap[0] = 1;
+  devConMap[1] = 1;
+  devConMap[2] = 1;
+  devConMap[3] = 2;
+
+  if ( instance_block.numExtVars > 4)
+  {
+    numExtVars = instance_block.numExtVars;
+    externalNodeMode = true;
+    numIntVars -= numExtVars-4;
+    devConMap.resize(numExtVars);
+    for (int i1=4; i1<numExtVars; ++i1)
+      devConMap[i1]=1;
+  }
+  // End manually inserted code
 
   // Set up jacobian stamp:
 
@@ -758,6 +776,17 @@
 
   PairVector collapsedNodes;
   collapseNodes();
+
+  // Manually added code
+  // there are always ci and bi, but the others could be mapped away.
+  int numExist = ((collapseNode_cx)?0:1) + ((collapseNode_bx)?0:1) + ((collapseNode_ei)?0:1) + 2;
+
+  if (externalNodeMode && (numExtVars != 4+numExist))
+  {
+    UserFatal(*this) << "Instance " << getName() << " has wrong number of external nodes!"
+                       << " If you specify any internal nodes as external, you must set all that exist. ";
+  }
+  // End manually added code
 
   if (collapseNode_cx)
   {
@@ -1633,9 +1685,49 @@
 
   origFlag = true;
 
+  // code manually moved from below, because we need it earlier than predicted by adms
+  tVCrit = (adms_vt(admsTemperature)*log((adms_vt(admsTemperature)/(1.41421356237309504880*(model_.IS)))));
+
   if (getSolverState().newtonIter == 0)
   {
 
+    if (getSolverState().initJctFlag_ && getDeviceOptions().voltageLimiterFlag)
+    {
+      // manually inserted code:
+      if (getSolverState().inputOPFlag)
+      {
+        Linear::Vector * flagSolVectorPtr = (extData.flagSolVectorPtr);
+        if ((*flagSolVectorPtr)[li_e] == 0 ||
+            (*flagSolVectorPtr)[li_ei] == 0 ||
+            (*flagSolVectorPtr)[li_b] == 0 ||
+            (*flagSolVectorPtr)[li_bi] == 0 ||
+            (*flagSolVectorPtr)[li_bx] == 0 ||
+            (*flagSolVectorPtr)[li_bp] == 0 ||
+            (*flagSolVectorPtr)[li_c] == 0 ||
+            (*flagSolVectorPtr)[li_ci] == 0 ||
+            (*flagSolVectorPtr)[li_cx] == 0 ||
+            (*flagSolVectorPtr)[li_dt] == 0 )
+        {
+          Vbci_limited = Vbcx_limited = Vbep_limited = 0;
+          Vbe_limited = Vbei_limited = Vbex_limited = tVCrit;
+          Vrth_limited = 0;
+          origFlag = false;
+        }
+      }
+      else
+      {
+        Vbci_limited = Vbcx_limited = Vbep_limited = 0;
+        Vbe_limited = Vbei_limited = Vbex_limited = tVCrit;
+        Vrth_limited = 0;
+        origFlag = false;
+        if (DEBUG_DEVICE && isActive(Diag::DEVICE_PARAMETERS) > 0 && getSolverState().debugTimeFlag)
+        {
+          Xyce::dout() << " Setting device initial condition to Base-Emitter drop=tVCrit (" << tVCrit << ")"<<std::endl;
+        }
+      }
+    }
+    // end manually inserted code
+
     if (!(getSolverState().dcopFlag)||(getSolverState().locaEnabledFlag && getSolverState().dcopFlag))
     {
       Vbe_old = ((*extData.currStaVectorPtr))[li_state_admsProbeID_V_b_e];
@@ -1669,6 +1761,7 @@
   }
   // -- code converted from analog/code block
-  tVCrit = (adms_vt(admsTemperature)*log((adms_vt(admsTemperature)/(1.41421356237309504880*(model_.IS)))));
+  // manually moved to above, we need it earlier than this:
+  //tVCrit = (adms_vt(admsTemperature)*log((adms_vt(admsTemperature)/(1.41421356237309504880*(model_.IS)))));
 
 
   //Vbei = ($limit(V(bi,ei),"typedpnjlim_new",$vt(),tVCrit,dtype));
